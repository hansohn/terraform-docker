---
name: docker

on:
  workflow_dispatch:
  push:
    branches:
      - '*'
    pull_request:
      types:
        - opened
        - reopened
        - synchronize
    tags:
      - 'v?[0-9]+.[0-9]+.[0-9]+'
  schedule:
    - cron: '0 7 * * 1'

jobs:
  matrix:
    runs-on: ubuntu-latest
    outputs:
      version_matrix: ${{ steps.generate-matrix.outputs.tfrelease }}
    steps:
      - name: Generate Matrix
        id: generate-matrix
        run: |
          sudo add-apt-repository ppa:deadsnakes/ppa
          sudo apt-get install --no-install-recommends -y jq python${PYTHON_VERSION} python3-pip
          python${PYTHON_VERSION} -m pip install --upgrade pip
          python${PYTHON_VERSION} -m pip install tfrelease
          tfrelease=$(tfrelease -vMmL -t "hansohn/terraform:{tag}" | jq '.versions')
          echo ${tfrelease}
          echo ::set-output name=tfrelease::${tfrelease}
        env:
          PYTHON_VERSION: 3.9

  docker:
    needs: matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        versions: ${{ fromJSON(needs.matrix.outputs.version_matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get latest tag
        if: github.event_name == 'schedule'
        id: latesttag
        uses: WyriHaximus/github-action-get-previous-tag@v1
        with:
          fallback: ${{ github.event.repository.default_branch }}

      - name: Checkout latest tag
        if: github.event_name == 'schedule'
        uses: actions/checkout@v3
        with:
          ref: ${{ steps.latesttag.outputs.tag }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        if: (github.event_name == 'push' && github.ref == 'refs/tags/*') || github.event_name == 'schedule'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push ${{ matrix.versions.version }}
        uses: docker/build-push-action@v3
        with:
          build-args: |
            TERRAFORM_VERSION=${{ matrix.versions.version }}
          context: ./debian
          push: ${{ (github.event_name == 'push' && github.ref == 'refs/tags/*') || github.event_name == 'schedule' }}
          tags: ${{ join(matrix.versions.tags, ',') }}

      - name: Get Short SHA
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          MSG_MINIMAL: true
          SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL_ID }}
          SLACK_COLOR: ${{ job.status }}
          SLACK_FOOTER: ""
          SLACK_ICON: "https://cdn-icons-png.flaticon.com/512/25/25231.png"
          SLACK_MESSAGE: "${{ job.status }} ${{ github.event.pull_request.html_url || github.event.head_commit.url }} (${{ github.ref_name }}#${{ steps.vars.outputs.sha_short }})"
          SLACK_USERNAME: ${{ secrets.SLACK_USERNAME }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
