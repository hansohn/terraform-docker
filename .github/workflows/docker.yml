---
name: docker-build

on:
  push:
    branches:
      - main

jobs:
  matrix:
    runs-on: ubuntu-latest
    outputs:
      version_matrix: ${{ steps.generate-matrix.outputs.version_matrix }}
    steps:
      - name: generate-matrix
        run: |
          sudo add-apt-repository ppa:deadsnakes/ppa
          sudo apt-get install --no-install-recommends -y jq python${PYTHON_VERSION} python3-pip
          python${PYTHON_VERSION} -m pip install --upgrade pip
          python${PYTHON_VERSION} -m pip install tfrelease
          version_matrix=$(tfrelease -v | jq '[.versions|.[]]')
          echo $version_matrix
          echo "::set-output name=version_matrix::$version_matrix"
        env:
          # PIP_INDEX_URL: "https://pypi.python.org/simple/" 
          PYTHON_VERSION: 3.9

  docker:
    needs: matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        versions: ${{ fromJson(needs.matrix.outputs.version_matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Compile tags
        id: compile_tags
        run: |
          tags=()
          for tag in ${{ matrix.versions.tags }}; do
            tag+=("hansohn/terraform:${tag}")
          done
          echo "${tags[*]}"
          echo "::set-output name=tags::$tags"

      - name: Build and push ${{ matrix.versions.version }}
        uses: docker/build-push-action@v3
        with:
          build-args: |
            TERRAFORM_VERSION=${{ matrix.versions.version }}
          context: ./debian
          push: true
          tags: |
            ${{ steps.compile_tags.outputs.tags }}
