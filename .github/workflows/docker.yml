---
name: docker-build

on:
  push:
    branches:
      - main

jobs:
  matrix:
    runs-on: ubuntu-latest
    outputs:
      version_matrix: ${{ fromJson(steps.generate-matrix.outputs.tfrelease) }}
    steps:
      - id: generate-matrix
        run: |
          sudo add-apt-repository ppa:deadsnakes/ppa
          sudo apt-get install --no-install-recommends -y jq python${PYTHON_VERSION} python3-pip
          python${PYTHON_VERSION} -m pip install --upgrade pip
          python${PYTHON_VERSION} -m pip install tfrelease
          tfrelease=$(tfrelease -vMmLt "hansohn/terraform:{tag}")
          echo ${tfrelease}
          echo ::set-output name=tfrelease::${tfrelease}
        env:
          PYTHON_VERSION: 3.9

  docker:
    needs: matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        versions: ${{ fromJson(needs.matrix.outputs.version_matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push ${{ matrix.versions.version }}
        uses: docker/build-push-action@v3
        with:
          build-args: |
            TERRAFORM_VERSION=${{ matrix.versions.version }}
          context: ./debian
          push: false
          tags: |
            ${{ matrix.versions.tags }}
